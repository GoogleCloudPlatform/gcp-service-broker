version: 1
name: google-dataproc
id: ebb35d15-8c7a-4c4e-8aa8-d8d751a9d8d3
description: Dataproc is a fully-managed service for running Apache Spark and Apache Hadoop clusters in a simpler, more cost-efficient way.
display_name: Google Cloud Dataproc
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/dataproc.svg
documentation_url: https://cloud.google.com/dataproc/docs/overview
support_url: https://cloud.google.com/dataproc/docs/support/getting-support
tags: [preview, gcp, terraform, dataproc]
plans:
- id: ed8c2ad0-edc7-4f36-a332-fd63d81ec276
  name: standard
  display_name: Standard (1 master, N workers)
  description: Basic plan with 1 master and N workers.
  properties:
    worker_machine_type: n1-standard-1
    worker_count: 2
    master_machine_type: n1-standard-1
    master_count: 1
    preemptible_count: 0
- id: 71cc321b-3ba3-4f0f-b058-90cfc978e743
  name: ha
  display_name: High Availability (3 masters, N workers)
  description: High availability plan with 3 masters and N workers.
  properties:
    worker_machine_type: n1-standard-1
    worker_count: 2
    master_machine_type: n1-standard-1
    master_count: 3
    preemptible_count: 0
provision:
  plan_inputs:
  - required: true
    field_name: worker_machine_type
    type: string
    details: 'The name of a Google Compute Engine machine type to create for the worker(s).'
  - required: true
    field_name: worker_count
    type: integer
    details: 'Specifies the number of worker nodes to create.'
  - required: true
    field_name: master_machine_type
    type: string
    details: 'The name of a Google Compute Engine machine type to create for the master(s).'
  - required: true
    field_name: master_count
    type: integer
    details: 'Specifies the number of master nodes to create.'
  - required: true
    field_name: preemptible_count
    type: integer
    details: 'Specifies the number of preemptible nodes to create. This is independent of the worker count and will be the type specified by `worker_machine_type`.'
  user_inputs:
  - field_name: name
    type: string
    details: The name of the cluster.
    default: pcf-sb-${counter.next()}-${time.nano()}
    constraints:
      maxLength: 222
      minLength: 3
      pattern: ^[a-z0-9-\.]+$
  - field_name: region
    type: string
    details: 'The region in which the cluster and associated nodes will be created in.'
    default: 'us-central1'
    constraints:
      examples:
      - us-central1
      pattern: ^[A-Za-z][-a-z0-9A-Z]+$
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
    type: object
  template: |-
    variable worker_machine_type {type = "string"}
    variable master_machine_type {type = "string"}
    variable worker_count {type = "string"}
    variable master_count {type = "string"}
    variable preemptible_count {type = "string"}

    variable name {type = "string"}
    variable region {type = "string"}
    variable labels {type = "map"}

    resource "google_dataproc_cluster" "cluster" {
      name   = "${var.name}"
      region = "${var.region}"
      labels = "${var.labels}"

      cluster_config {
        master_config {
          num_instances = "${var.master_count}"
          machine_type  = "${var.master_machine_type}"
        }

        worker_config {
          num_instances = "${var.worker_count}"
          machine_type  = "${var.worker_machine_type}"
        }

        preemptible_worker_config {
          num_instances = "${var.preemptible_count}"
        }
      }
    }

    output bucket_name {value = "${google_dataproc_cluster.cluster.cluster_config.0.bucket}"}
    output name {value = "${google_dataproc_cluster.cluster.name}"}

  outputs:
  - required: true
    field_name: bucket_name
    type: string
    details: Name of the bucket used for staging jobs.
    constraints:
      maxLength: 222
      minLength: 3
      pattern: ^[A-Za-z0-9_\.]+$
  - required: true
    field_name: name
    type: string
    details: The name of the Dataproc cluster.
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "pcf-binding-${request.binding_id}")}
    overwrite: true
  - name: bucket
    default: ${instance.details["bucket_name"]}
    overwrite: true
  template: |-
    variable service_account_name {type = "string"}
    variable bucket {type = "string"}

    resource "google_service_account" "account" {
      account_id = "${var.service_account_name}"
      display_name = "${var.service_account_name}"
    }

    resource "google_service_account_key" "key" {
      service_account_id = "${google_service_account.account.name}"
    }

    resource "google_storage_bucket_iam_member" "member" {
      bucket = "${var.bucket}"
      role   = "roles/storage.objectAdmin"
      member = "serviceAccount:${google_service_account.account.email}"
    }

    resource "google_project_iam_member" "member" {
      role   = "roles/dataproc.editor"
      member = "serviceAccount:${google_service_account.account.email}"
    }


    output "name" {value = "${google_service_account.account.display_name}"}
    output "email" {value = "${google_service_account.account.email}"}
    output "private_key" {value = "${google_service_account_key.key.private_key}"}
    output "project_id" {value = "${google_service_account.account.project}"}
  outputs:
  - required: true
    field_name: email
    type: string
    details: Email address of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029@my-project.iam.gserviceaccount.com
      pattern: ^pcf-binding-[a-z0-9-]+@.+\.gserviceaccount\.com$
  - required: true
    field_name: name
    type: string
    details: The name of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029
  - required: true
    field_name: private_key
    type: string
    details: Service account private key data. Base64 encoded JSON.
    constraints:
      minLength: 512
      pattern: ^[A-Za-z0-9+/]*=*$
  - required: true
    field_name: project_id
    type: string
    details: ID of the project that owns the service account.
    constraints:
      examples:
      - my-project
      maxLength: 30
      minLength: 6
      pattern: ^[a-z0-9-]+$
examples:
- name: Basic Configuration
  description: Create a standard Dataproc cluster with a service account that can kick off jobs (roles/dataproc.editor) and has objectAdmin access to the bucket that's created.
  plan_id: ed8c2ad0-edc7-4f36-a332-fd63d81ec276
  provision_params: {}
  bind_params: {}
